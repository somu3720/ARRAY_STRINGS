class Solution {
    public int nextGreaterElement(int n) {
        
        char arr[] = (""+n).toCharArray(); // convert int to char array
        
        // find first dip
        
        int i = arr.length -2;
        
        while(i>=0 && arr[i] >= arr[i+1])
        {
            i--;
        }
        
        if(i==-1)
        {
            return -1;
        }
        
        // find js greater than ith index element
        
        int k = arr.length - 1;
        
        while(k >= i && arr[i] >= arr[k])
        {
            k--;
        }
        
     //   swap from i & k
        swap(arr, i, k);
        reverse(arr, i + 1);

            try {
              return Integer.parseInt(new String(arr));
            } catch (Exception e) {
                return -1;
            }

        
   
    }
    
     private void reverse(char[] ch, int start) {
            int l = start, r = ch.length - 1;
            while (l < r) {
                swap(ch, l, r);
                l++;
                r--;
            }
        }

        private void swap(char[] ch, int i, int j) {
            char temp = ch[i];
            ch[i] = ch[j];
            ch[j] = temp;
        }
}
